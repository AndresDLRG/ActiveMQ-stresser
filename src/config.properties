# ----------------------------------BROKER CONFURATIONS---------------------------------------
# URL to activeMQ broker.  e.i. tcp:/localhost:61616 
broker.url = tcp:/localhost:61616 
# name of the queue to write the objects
queue.to.write = queue.to.write



# ----------------------------------LIMITS CONFURATIONS---------------------------------------
# if set to less than 1, it will be indefinitely and you are responsible to 
# stop the program, else when it is reached the program will stop
max.objects.to.send = 0

# if set to more than 0, the program will stop at that execution time (seconds)
max.execution.time = 0



# ----------------------------------THROUGPUT CONFIGURATION-----------------------------------
# The speed will be approximately

# time period to take in count while sending objects
# possible values [s]second, [m]minute, [h]hour
time.period = s
# quantity of instances to send in the previous selected period
instances.per.time.period = 10



# ----------------------------------DATA TO SEND----------------------------------------------
# fully qualified class name to create and send objects
class.type.to.send = andresdlrg.SampleClass

# if true the first instance created will be the only one created and it will be sent in all messages
send.same.object.always = false

# A list of the properties to write to the object
# the pattern to follow id
# [attributeName] | [attributeFullyQualifiedType] | [value] | [extraParam]
# separate attributes by double @ (@@)
# the extra parameter can be any of the following:
# * consecutiveNumber(begin, direction[+/-])		value will be ignored
# * randomNumber(low, high, booleanFloat)			value will be ignored
# * randomString(minLength, maxLength)				value will be ignored
# * randomStringList(value1, value2, ..)			value will be ignored
# * currentDate										value will be ignored
# * defineDateFormat(pattern)
# * array(separator)
# * list(separator)
attibutes.to.write = \
consecutive 		| java.lang.Long		| 				 	| consecutiveNumber(0, +) @@\
permaString 		| java.lang.String		| alwaysSameString 	| @@\
randomString 		| java.lang.String 		| 		 			| randomString(2, 10) @@\
permaNumber 		| java.lang.Double 		| 78	 			| @@\
randomNumber 		| java.lang.Integer 	| 		 			| randomNumber(0, 100, false) @@\
randomString	 	| java.lang.String 		| 		 			| randomStringList(option1, option2, option3) @@\
permaDate 			| java.util.Date 		| 2017/06/12 		| defineDateFormat(yyyy/MM/dd) @@\
currentDate			| java.util.Date 		| 		 			| currentDate @@\
integerArray		| java.util.Integer		| 1,3,5,8		 	| array(,) @@\
stringList			| java.util.String 		| ab,bc,cd 			| list(,)
