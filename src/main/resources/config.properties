# ----------------------------------BROKER CONFIGURATIONS-------------------------------------
# URL to activeMQ broker.  e.i. tcp:/localhost:61616 
connection.broker.url = tcp://localhost:61616
# name of the queue to write the objects
connection.destination = queue.to.write
# in case credentials are needed
connection.userName = 
connection.password = 

# custom connection factory configurations
connection.clientID = activeMQ-stresser
connection.copyMessageOnSend = false
connection.disableTimeStampsByDefault = true
connection.maxThreadPoolSize = 8
connection.messagePrioritySupported = true
connection.optimizeAcknowledge = true
connection.producerWindowSize = 100
connection.sendTimeout = 1000
connection.statsEnabled = false
connection.trustAllPackages = true
connection.useAsyncSend = true
connection.useCompression = false

# custom jmsTemplate configuration
connection.deliveryDelay = 0
connection.deliveryPersistent = false
connection.explicitQosEnabled = true
connection.priority = 4
connection.timeToLive = 0


# ----------------------------------LIMITS CONFIGURATIONS-------------------------------------
# if set to less than 1, it will be indefinitely and you are responsible to 
# stop the program, else when it is reached the program will stop
max.objects.to.send = 0

# if set to more than 0, the program will stop at that execution time (seconds)
max.execution.time = 0



# ----------------------------------THROUGHPUT CONFIGURATION-----------------------------------
# The speed will be approximately

# time period to take in count while sending objects
# possible values [s]second, [m]minute, [h]hour
time.period = s
# quantity of instances to send in the previous selected period
instances.per.time.period = 10



# ----------------------------------DATA TO SEND----------------------------------------------
# fully qualified class name to create and send objects
class.type.to.send = andresdlrg.activemq.stresser.model.SampleClass

# if true the first instance created will be the only one created and it will be sent in all messages
use.same.object.always = false

# A list of the properties to write to the object
# the pattern to follow id
# [attributeName] | [fieldType] | [value] | [extraParam]
# separate attributes by double @ (@@)
# the extra parameter can be any of the following:
# * null											value will be ignored
# * consecutiveNumber(begin, direction[+/-])		value will be ignored
# * randomNumber(low, high, booleanFloat)			value will be ignored
# * randomString(minLength, maxLength)				value will be ignored
# * randomStringFromList(value1, value2, ..)		value will be ignored
# * currentDate										value will be ignored
# * defineDateFormat(pattern)
# * array(separator)
# * list(separator)
attributes.to.write = \
consecutive 	| long		| 				 	| consecutiveNumber(0, +) @@\
permaString 	| string	| alwaysSameString 	| @@\
randomString 	| string 	| 		 			| randomString(2, 10) @@\
permaNumber 	| int 		| 78	 			| @@\
randomNumber 	| double 	| 		 			| randomNumber(0, 100) @@\
randomString	| string 	| 		 			| randomStringFromList(option1, option2, option3) @@\
permaDate 		| date 		| 2017/06/12 		| defineDateFormat(yyyy/MM/dd) @@\
currentDate		| date 		| 		 			| currentDate @@\
integerArray	| int		| 1,3,5,8		 	| array(,) @@\
stringList		| string 	| ab,bc,cd 			| list(,)
